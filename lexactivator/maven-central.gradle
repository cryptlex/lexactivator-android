apply plugin: 'maven-publish'
apply plugin: 'signing'

task androidJavadocs(type: Javadoc) {
	source = android.sourceSets.main.java.srcDirs
	classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
	android.libraryVariants.all { variant ->
		if (variant.name == 'release') {
			owner.classpath += variant.javaCompileProvider.get().classpath
		}
	}
	exclude '**/R.html', '**/R.*.html', '**/index.html'
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
	archiveClassifier.set('javadoc')
	from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
	archiveClassifier.set('sources')
	from android.sourceSets.main.java.srcDirs
}

println "Loading env vars"
    ext["signing.keyId"] = System.getenv('GPG_PUBLIC_KEY')
    ext["signing.password"] = System.getenv('GPG_PASSPHRASE')
    ext["signing.secretKeyRingFile"] = System.getenv('SIGNING_FILE')
    ext["ossrhUsername"] = System.getenv('OSSRH_USERNAME')
    ext["ossrhPassword"] = System.getenv('OSSRH_PASSWORD')
    
//  ext["sonatypeStagingProfileId"] = System.getenv('SONATYPE_STAGING_PROFILE_ID')

afterEvaluate{project ->
	publishing {
		publications {
			release( MavenPublication ) {
				
				groupId PUBLISH_GROUP_ID
				artifactId PUBLISH_ARTIFACT_ID
				version PUBLISH_VERSION
				
				artifact bundleReleaseAar
				artifact androidJavadocsJar
				artifact androidSourcesJar
				
				pom {
                name = PUBLISH_ARTIFACT_ID
                description = 'LexActivator wrapper for Android.'
                url = 'https://cyptlex.com/'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'adnan-kamili'
                        name = 'Adnan Kamili'
                        email = 'adnan.kamili@cryptlex.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/cryptlex/lexactivator-android.git'
                    developerConnection = 'scm:git:ssh://github.com/cryptlex/lexactivator-android.git'
                    url = 'https://github.com/cryptlex/lexactivator-android'
                }
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    project.configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }

			}
		}
	}
		repositories {
			maven {
				name = "sonatype"

				def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
				def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
				url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

				credentials {
					username ossrhUsername
					password ossrhPassword
				}
			}
		}
	}
}

signing {
		sign publishing.publications
}

